{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Documents\\\\HabitQuest\\\\client\\\\src\\\\components\\\\CalendarView.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarView = ({\n  goals\n}) => {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n  const firstDay = new Date(year, month, 1).getDay();\n\n  // Generate days array\n  const days = [];\n  for (let i = 0; i < firstDay; i++) {\n    days.push(null); // Empty slots before the 1st\n  }\n  for (let i = 1; i <= daysInMonth; i++) {\n    days.push(i);\n  }\n\n  // Map completed goals by date\n  const completedByDate = {};\n  goals.forEach(goal => {\n    if (goal.completed) {\n      const date = new Date(goal.createdAt);\n      const dayKey = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n      if (!completedByDate[dayKey]) completedByDate[dayKey] = [];\n      completedByDate[dayKey].push(goal.name);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: new Date(year, month).toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day-header\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), days.map((day, index) => {\n        const date = day ? new Date(year, month, day) : null;\n        const dayKey = date ? `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}` : null;\n        const completedGoals = dayKey && completedByDate[dayKey] ? completedByDate[dayKey] : [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `calendar-day ${day ? 'active' : ''}`,\n          children: day ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), completedGoals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"completed-goals\",\n              children: completedGoals.map((goal, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"goal-marker\",\n                children: [\"\\u2714\\uFE0F \", goal]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : null\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarView","goals","today","Date","year","getFullYear","month","getMonth","daysInMonth","getDate","firstDay","getDay","days","i","push","completedByDate","forEach","goal","completed","date","createdAt","dayKey","name","className","children","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","completedGoals","length","idx","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Documents/HabitQuest/client/src/components/CalendarView.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CalendarView = ({ goals }) => {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = today.getMonth();\r\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n  const firstDay = new Date(year, month, 1).getDay();\r\n\r\n  // Generate days array\r\n  const days = [];\r\n  for (let i = 0; i < firstDay; i++) {\r\n    days.push(null); // Empty slots before the 1st\r\n  }\r\n  for (let i = 1; i <= daysInMonth; i++) {\r\n    days.push(i);\r\n  }\r\n\r\n  // Map completed goals by date\r\n  const completedByDate = {};\r\n  goals.forEach(goal => {\r\n    if (goal.completed) {\r\n      const date = new Date(goal.createdAt);\r\n      const dayKey = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\r\n      if (!completedByDate[dayKey]) completedByDate[dayKey] = [];\r\n      completedByDate[dayKey].push(goal.name);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <h3>{new Date(year, month).toLocaleString('default', { month: 'long', year: 'numeric' })}</h3>\r\n      <div className=\"calendar-grid\">\r\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n          <div key={day} className=\"calendar-day-header\">{day}</div>\r\n        ))}\r\n        {days.map((day, index) => {\r\n          const date = day ? new Date(year, month, day) : null;\r\n          const dayKey = date ? `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}` : null;\r\n          const completedGoals = dayKey && completedByDate[dayKey] ? completedByDate[dayKey] : [];\r\n          return (\r\n            <div key={index} className={`calendar-day ${day ? 'active' : ''}`}>\r\n              {day ? (\r\n                <>\r\n                  <span>{day}</span>\r\n                  {completedGoals.length > 0 && (\r\n                    <div className=\"completed-goals\">\r\n                      {completedGoals.map((goal, idx) => (\r\n                        <span key={idx} className=\"goal-marker\">✔️ {goal}</span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}