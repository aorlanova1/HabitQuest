{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Documents\\\\HabitQuest\\\\client\\\\src\\\\components\\\\Pet.js\";\nimport React from 'react';\nimport './Pet.css'; // We'll add styles for the speech bubble\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pet = ({\n  user,\n  goals\n}) => {\n  const completedGoals = goals.filter(g => g.completed).length;\n  const messages = [`Great job! You've completed ${completedGoals} goals!`, \"Keep it up! You're doing awesome!\", \"One more goal to go—let's do this!\", \"I'm proud of you! Keep the streak alive!\"];\n\n  // Select pet image based on petType\n  const petType = (user === null || user === void 0 ? void 0 : user.petType) || 'dog';\n  const petImage = `/assets/${petType}.png`; // Path to image in public/assets\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pet\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Pet Companion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: petImage,\n        alt: petType,\n        className: \"pet-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speech-bubble\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [petType.charAt(0).toUpperCase() + petType.slice(1), \" says: \\\"\", messages[Math.floor(Math.random() * messages.length)], \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Pet;\nexport default Pet;\nvar _c;\n$RefreshReg$(_c, \"Pet\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pet","user","goals","completedGoals","filter","g","completed","length","messages","petType","petImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","charAt","toUpperCase","slice","Math","floor","random","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Documents/HabitQuest/client/src/components/Pet.js"],"sourcesContent":["import React from 'react';\r\nimport './Pet.css'; // We'll add styles for the speech bubble\r\n\r\nconst Pet = ({ user, goals }) => {\r\n  const completedGoals = goals.filter(g => g.completed).length;\r\n  const messages = [\r\n    `Great job! You've completed ${completedGoals} goals!`,\r\n    \"Keep it up! You're doing awesome!\",\r\n    \"One more goal to go—let's do this!\",\r\n    \"I'm proud of you! Keep the streak alive!\"\r\n  ];\r\n\r\n  // Select pet image based on petType\r\n  const petType = user?.petType || 'dog';\r\n  const petImage = `/assets/${petType}.png`; // Path to image in public/assets\r\n\r\n  return (\r\n    <div className=\"pet\">\r\n      <h3>Your Pet Companion</h3>\r\n      <div className=\"pet-container\">\r\n        <img src={petImage} alt={petType} className=\"pet-image\" />\r\n        <div className=\"speech-bubble\">\r\n          <p>{petType.charAt(0).toUpperCase() + petType.slice(1)} says: \"{messages[Math.floor(Math.random() * messages.length)]}\"</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pet;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAC/B,MAAMC,cAAc,GAAGD,KAAK,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAACC,MAAM;EAC5D,MAAMC,QAAQ,GAAG,CACf,+BAA+BL,cAAc,SAAS,EACtD,mCAAmC,EACnC,oCAAoC,EACpC,0CAA0C,CAC3C;;EAED;EACA,MAAMM,OAAO,GAAG,CAAAR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,OAAO,KAAI,KAAK;EACtC,MAAMC,QAAQ,GAAG,WAAWD,OAAO,MAAM,CAAC,CAAC;;EAE3C,oBACEV,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bb,OAAA;QAAKkB,GAAG,EAAEP,QAAS;QAACQ,GAAG,EAAET,OAAQ;QAACE,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DjB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5Bb,OAAA;UAAAa,QAAA,GAAIH,OAAO,CAACU,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGX,OAAO,CAACY,KAAK,CAAC,CAAC,CAAC,EAAC,WAAQ,EAACb,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhB,QAAQ,CAACD,MAAM,CAAC,CAAC,EAAC,IAAC;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,EAAA,GAxBIzB,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}