{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Documents\\\\HabitQuest\\\\client\\\\src\\\\components\\\\GoalList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoalList = ({\n  goals,\n  setGoals\n}) => {\n  const handleComplete = async id => {\n    const token = localStorage.getItem('token');\n    try {\n      const res = await axios.put(`/api/goals/${id}`, {\n        completed: true\n      }, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setGoals(prev => prev.map(goal => goal._id === id ? res.data : goal));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No goals yet. Add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }, this) : goals.map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goal-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goal.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: goal.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", goal.type, \" | Priority: \", goal.priority, \" | Streak: \", goal.streak]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComplete(goal._id),\n        disabled: goal.completed,\n        children: goal.completed ? 'Completed' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, goal._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = GoalList;\nexport default GoalList;\nvar _c;\n$RefreshReg$(_c, \"GoalList\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","GoalList","goals","setGoals","handleComplete","id","token","localStorage","getItem","res","put","completed","headers","prev","map","goal","_id","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","name","description","type","priority","streak","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Documents/HabitQuest/client/src/components/GoalList.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GoalList = ({ goals, setGoals }) => {\r\n  const handleComplete = async (id) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const res = await axios.put(`/api/goals/${id}`, { completed: true }, { headers: { 'x-auth-token': token } });\r\n      setGoals(prev => prev.map(goal => goal._id === id ? res.data : goal));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"goal-list\">\r\n      <h2>Your Goals</h2>\r\n      {goals.length === 0 ? <p>No goals yet. Add some!</p> : (\r\n        goals.map(goal => (\r\n          <div key={goal._id} className=\"goal-item\">\r\n            <h3>{goal.name}</h3>\r\n            <p>{goal.description}</p>\r\n            <p>Type: {goal.type} | Priority: {goal.priority} | Streak: {goal.streak}</p>\r\n            <button onClick={() => handleComplete(goal._id)} disabled={goal.completed}>\r\n              {goal.completed ? 'Completed' : 'Mark Complete'}\r\n            </button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACxC,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;IACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,cAAcL,EAAE,EAAE,EAAE;QAAEM,SAAS,EAAE;MAAK,CAAC,EAAE;QAAEC,OAAO,EAAE;UAAE,cAAc,EAAEN;QAAM;MAAE,CAAC,CAAC;MAC5GH,QAAQ,CAACU,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKX,EAAE,GAAGI,GAAG,CAACQ,IAAI,GAAGF,IAAI,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACElB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBxB,KAAK,CAACyB,MAAM,KAAK,CAAC,gBAAG3B,OAAA;MAAAsB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAClDxB,KAAK,CAACY,GAAG,CAACC,IAAI,iBACZf,OAAA;MAAoBqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvCtB,OAAA;QAAAsB,QAAA,EAAKP,IAAI,CAACa;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpB1B,OAAA;QAAAsB,QAAA,EAAIP,IAAI,CAACc;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB1B,OAAA;QAAAsB,QAAA,GAAG,QAAM,EAACP,IAAI,CAACe,IAAI,EAAC,eAAa,EAACf,IAAI,CAACgB,QAAQ,EAAC,aAAW,EAAChB,IAAI,CAACiB,MAAM;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5E1B,OAAA;QAAQiC,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAACW,IAAI,CAACC,GAAG,CAAE;QAACkB,QAAQ,EAAEnB,IAAI,CAACJ,SAAU;QAAAW,QAAA,EACvEP,IAAI,CAACJ,SAAS,GAAG,WAAW,GAAG;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GANDX,IAAI,CAACC,GAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACS,EAAA,GA5BIlC,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}