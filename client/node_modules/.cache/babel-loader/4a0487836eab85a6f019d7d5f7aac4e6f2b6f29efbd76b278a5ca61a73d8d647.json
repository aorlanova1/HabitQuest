{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Documents\\\\HabitQuest\\\\client\\\\src\\\\components\\\\Statistics.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Statistics = ({\n  goals\n}) => {\n  const data = {\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\n    datasets: [{\n      label: 'Completed Goals',\n      data: [goals.filter(g => g.type === 'daily' && g.completed).length, goals.filter(g => g.type === 'weekly' && g.completed).length, goals.filter(g => g.type === 'monthly' && g.completed).length, goals.filter(g => g.type === 'yearly' && g.completed).length],\n      backgroundColor: ['rgba(77, 208, 225, 0.7)', 'rgba(129, 199, 132, 0.7)', 'rgba(255, 202, 40, 0.7)', 'rgba(244, 143, 177, 0.7)'],\n      borderColor: ['rgba(77, 208, 225, 1)', 'rgba(129, 199, 132, 1)', 'rgba(255, 202, 40, 1)', 'rgba(244, 143, 177, 1)'],\n      borderWidth: 1,\n      hoverBackgroundColor: ['rgba(77, 208, 225, 0.9)', 'rgba(129, 199, 132, 0.9)', 'rgba(255, 202, 40, 0.9)', 'rgba(244, 143, 177, 0.9)']\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Poppins',\n            weight: '500'\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: 'Completed Goals by Type',\n        font: {\n          size: 18,\n          family: 'Poppins',\n          weight: '600'\n        },\n        color: '#00796b'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Number of Goals',\n          font: {\n            size: 14,\n            family: 'Poppins'\n          }\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Goal Type',\n          font: {\n            size: 14,\n            family: 'Poppins'\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics card\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Statistics","goals","data","labels","datasets","label","filter","g","type","completed","length","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","options","responsive","plugins","legend","position","font","size","family","weight","title","display","text","color","scales","y","beginAtZero","x","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Documents/HabitQuest/client/src/components/Statistics.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Statistics = ({ goals }) => {\r\n  const data = {\r\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\r\n    datasets: [{\r\n      label: 'Completed Goals',\r\n      data: [\r\n        goals.filter(g => g.type === 'daily' && g.completed).length,\r\n        goals.filter(g => g.type === 'weekly' && g.completed).length,\r\n        goals.filter(g => g.type === 'monthly' && g.completed).length,\r\n        goals.filter(g => g.type === 'yearly' && g.completed).length\r\n      ],\r\n      backgroundColor: [\r\n        'rgba(77, 208, 225, 0.7)',\r\n        'rgba(129, 199, 132, 0.7)',\r\n        'rgba(255, 202, 40, 0.7)',\r\n        'rgba(244, 143, 177, 0.7)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(77, 208, 225, 1)',\r\n        'rgba(129, 199, 132, 1)',\r\n        'rgba(255, 202, 40, 1)',\r\n        'rgba(244, 143, 177, 1)'\r\n      ],\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: [\r\n        'rgba(77, 208, 225, 0.9)',\r\n        'rgba(129, 199, 132, 0.9)',\r\n        'rgba(255, 202, 40, 0.9)',\r\n        'rgba(244, 143, 177, 0.9)'\r\n      ]\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Poppins',\r\n            weight: '500'\r\n          }\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Completed Goals by Type',\r\n        font: {\r\n          size: 18,\r\n          family: 'Poppins',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b'\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Goals',\r\n          font: {\r\n            size: 14,\r\n            family: 'Poppins'\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Goal Type',\r\n          font: {\r\n            size: 14,\r\n            family: 'Poppins'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"statistics card\">\r\n      <Bar data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5GR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAChC,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;IAChDC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,iBAAiB;MACxBH,IAAI,EAAE,CACJD,KAAK,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,OAAO,IAAID,CAAC,CAACE,SAAS,CAAC,CAACC,MAAM,EAC3DT,KAAK,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,IAAID,CAAC,CAACE,SAAS,CAAC,CAACC,MAAM,EAC5DT,KAAK,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,IAAID,CAAC,CAACE,SAAS,CAAC,CAACC,MAAM,EAC7DT,KAAK,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,IAAID,CAAC,CAACE,SAAS,CAAC,CAACC,MAAM,CAC7D;MACDC,eAAe,EAAE,CACf,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B,CAC3B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,EACvB,wBAAwB,CACzB;MACDC,WAAW,EAAE,CAAC;MACdC,oBAAoB,EAAE,CACpB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B;IAE9B,CAAC;EACH,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,KAAK;QACfhB,MAAM,EAAE;UACNiB,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE,SAAS;YACjBC,MAAM,EAAE;UACV;QACF;MACF,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,yBAAyB;QAC/BN,IAAI,EAAE;UACJC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV,CAAC;QACDI,KAAK,EAAE;MACT;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBN,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,iBAAiB;UACvBN,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE;UACV;QACF;MACF,CAAC;MACDS,CAAC,EAAE;QACDP,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,WAAW;UACjBN,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE;UACV;QACF;MACF;IACF;EACF,CAAC;EAED,oBACExB,OAAA;IAAKkC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BnC,OAAA,CAACV,GAAG;MAACc,IAAI,EAAEA,IAAK;MAACa,OAAO,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACC,EAAA,GAvFItC,UAAU;AAyFhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}