{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Documents\\\\HabitQuest\\\\client\\\\src\\\\components\\\\ProgressInsights.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst ProgressInsights = ({\n  goals,\n  totalCompleted,\n  totalGoals\n}) => {\n  // Success Rate (from Statistics)\n  const successRate = totalGoals > 0 ? totalCompleted / totalGoals * 100 : 0;\n\n  // Completed Goals by Type Bar Chart (from Statistics)\n  const completedByTypeData = {\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\n    datasets: [{\n      label: 'Completed Goals',\n      data: [goals.filter(g => g.type === 'daily' && g.completed).length, goals.filter(g => g.type === 'weekly' && g.completed).length, goals.filter(g => g.type === 'monthly' && g.completed).length, goals.filter(g => g.type === 'yearly' && g.completed).length],\n      backgroundColor: ['linear-gradient(135deg, #77D7F7 0%, #4DA8DA 100%)', 'linear-gradient(135deg, #81C784 0%, #4CAF50 100%)', 'linear-gradient(135deg, #FFCA28 0%, #FFB300 100%)', 'linear-gradient(135deg, #F48FB1 0%, #EC407A 100%)'].map(gradient => {\n        const ctx = document.createElement('canvas').getContext('2d');\n        const grad = ctx.createLinearGradient(0, 0, 0, 400);\n        const [start, end] = gradient.match(/#[0-9a-fA-F]{6}/g);\n        grad.addColorStop(0, start);\n        grad.addColorStop(1, end);\n        return grad;\n      }),\n      borderColor: ['#4DA8DA', '#4CAF50', '#FFB300', '#EC407A'],\n      borderWidth: 2,\n      borderRadius: 5,\n      hoverBackgroundColor: ['rgba(77, 215, 247, 0.9)', 'rgba(129, 199, 132, 0.9)', 'rgba(255, 202, 40, 0.9)', 'rgba(244, 143, 177, 0.9)'],\n      hoverBorderColor: ['#2E86C1', '#388E3C', '#FFA000', '#D81B60'],\n      hoverBorderWidth: 3\n    }]\n  };\n  const completedByTypeOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Montserrat',\n            weight: '500'\n          },\n          color: '#00796b'\n        }\n      },\n      title: {\n        display: true,\n        text: 'Completed Goals by Type',\n        font: {\n          size: 18,\n          family: 'Montserrat',\n          weight: '600'\n        },\n        color: '#00796b'\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleFont: {\n          family: 'Montserrat',\n          size: 14\n        },\n        bodyFont: {\n          family: 'Montserrat',\n          size: 12\n        },\n        cornerRadius: 8\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Number of Goals',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          font: {\n            family: 'Montserrat'\n          },\n          color: '#333'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Goal Type',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        },\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            family: 'Montserrat'\n          },\n          color: '#333'\n        }\n      }\n    },\n    animation: {\n      duration: 1500,\n      easing: 'easeOutQuart'\n    }\n  };\n\n  // Success Rate Over Time (from Insights)\n  const completedByDate = {};\n  goals.forEach(goal => {\n    if (goal.completed) {\n      const date = new Date(goal.createdAt);\n      const dayKey = date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      });\n      completedByDate[dayKey] = (completedByDate[dayKey] || 0) + 1;\n    }\n  });\n  const dates = Object.keys(completedByDate).sort((a, b) => new Date(a) - new Date(b));\n  const successData = dates.map(date => completedByDate[date] || 0);\n  const successRateData = {\n    labels: dates,\n    datasets: [{\n      label: 'Completed Goals Over Time',\n      data: successData,\n      borderColor: '#00796b',\n      backgroundColor: 'rgba(0, 121, 107, 0.2)',\n      fill: true,\n      tension: 0.4,\n      pointBackgroundColor: '#00796b',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: '#00796b'\n    }]\n  };\n  const successRateOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Montserrat',\n            weight: '500'\n          },\n          color: '#00796b'\n        }\n      },\n      title: {\n        display: true,\n        text: 'Success Rate Over Time',\n        font: {\n          size: 18,\n          family: 'Montserrat',\n          weight: '600'\n        },\n        color: '#00796b'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Completed Goals',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        }\n      }\n    }\n  };\n\n  // Consistency by type\n  const consistencyData = {\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\n    datasets: [{\n      label: 'Consistency (Completed Goals)',\n      data: [goals.filter(g => g.type === 'daily' && g.completed).length, goals.filter(g => g.type === 'weekly' && g.completed).length, goals.filter(g => g.type === 'monthly' && g.completed).length, goals.filter(g => g.type === 'yearly' && g.completed).length],\n      backgroundColor: '#4dd0e1',\n      borderColor: '#00796b',\n      borderWidth: 2,\n      borderRadius: 5\n    }]\n  };\n  const consistencyOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Montserrat',\n            weight: '500'\n          },\n          color: '#00796b'\n        }\n      },\n      title: {\n        display: true,\n        text: 'Consistency by Goal Type',\n        font: {\n          size: 18,\n          family: 'Montserrat',\n          weight: '600'\n        },\n        color: '#00796b'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Completed Goals',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Goal Type',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        }\n      }\n    }\n  };\n\n  // Longest streak\n  const longestStreak = Math.max(...goals.map(g => g.streak), 0);\n\n  // Most active days (by weekday)\n  const activeDays = {};\n  goals.forEach(goal => {\n    if (goal.completed) {\n      const date = new Date(goal.createdAt);\n      const weekday = date.toLocaleDateString('en-US', {\n        weekday: 'long'\n      });\n      activeDays[weekday] = (activeDays[weekday] || 0) + 1;\n    }\n  });\n  const activeDaysData = {\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n    datasets: [{\n      label: 'Completions by Day',\n      data: [activeDays['Monday'] || 0, activeDays['Tuesday'] || 0, activeDays['Wednesday'] || 0, activeDays['Thursday'] || 0, activeDays['Friday'] || 0, activeDays['Saturday'] || 0, activeDays['Sunday'] || 0],\n      backgroundColor: '#ffca28',\n      borderColor: '#ffb300',\n      borderWidth: 2,\n      borderRadius: 5\n    }]\n  };\n  const activeDaysOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n            family: 'Montserrat',\n            weight: '500'\n          },\n          color: '#00796b'\n        }\n      },\n      title: {\n        display: true,\n        text: 'Most Active Days of the Week',\n        font: {\n          size: 18,\n          family: 'Montserrat',\n          weight: '600'\n        },\n        color: '#00796b'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Completions',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Day of the Week',\n          font: {\n            size: 14,\n            family: 'Montserrat'\n          },\n          color: '#00796b'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insights\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Success Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [successRate.toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${successRate}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Completed Goals by Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: completedByTypeData,\n        options: completedByTypeOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Success Rate Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: successRateData,\n        options: successRateOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Consistency by Goal Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: consistencyData,\n        options: consistencyOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Most Active Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: activeDaysData,\n        options: activeDaysOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Longest Streak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: longestStreak\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 12\n        }, this), \" days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressInsights;\nexport default ProgressInsights;\nvar _c;\n$RefreshReg$(_c, \"ProgressInsights\");","map":{"version":3,"names":["React","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ProgressInsights","goals","totalCompleted","totalGoals","successRate","completedByTypeData","labels","datasets","label","data","filter","g","type","completed","length","backgroundColor","map","gradient","ctx","document","createElement","getContext","grad","createLinearGradient","start","end","match","addColorStop","borderColor","borderWidth","borderRadius","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","completedByTypeOptions","responsive","plugins","legend","position","font","size","family","weight","color","title","display","text","tooltip","titleFont","bodyFont","cornerRadius","scales","y","beginAtZero","grid","ticks","x","animation","duration","easing","completedByDate","forEach","goal","date","Date","createdAt","dayKey","toLocaleDateString","month","day","dates","Object","keys","sort","a","b","successData","successRateData","fill","tension","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","successRateOptions","consistencyData","consistencyOptions","longestStreak","Math","max","streak","activeDays","weekday","activeDaysData","activeDaysOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","style","width","options","_c","$RefreshReg$"],"sources":["C:/Users/aryan/Documents/HabitQuest/client/src/components/ProgressInsights.js"],"sourcesContent":["import React from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ProgressInsights = ({ goals, totalCompleted, totalGoals }) => {\r\n  // Success Rate (from Statistics)\r\n  const successRate = totalGoals > 0 ? (totalCompleted / totalGoals) * 100 : 0;\r\n\r\n  // Completed Goals by Type Bar Chart (from Statistics)\r\n  const completedByTypeData = {\r\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\r\n    datasets: [{\r\n      label: 'Completed Goals',\r\n      data: [\r\n        goals.filter(g => g.type === 'daily' && g.completed).length,\r\n        goals.filter(g => g.type === 'weekly' && g.completed).length,\r\n        goals.filter(g => g.type === 'monthly' && g.completed).length,\r\n        goals.filter(g => g.type === 'yearly' && g.completed).length\r\n      ],\r\n      backgroundColor: [\r\n        'linear-gradient(135deg, #77D7F7 0%, #4DA8DA 100%)',\r\n        'linear-gradient(135deg, #81C784 0%, #4CAF50 100%)',\r\n        'linear-gradient(135deg, #FFCA28 0%, #FFB300 100%)',\r\n        'linear-gradient(135deg, #F48FB1 0%, #EC407A 100%)'\r\n      ].map(gradient => {\r\n        const ctx = document.createElement('canvas').getContext('2d');\r\n        const grad = ctx.createLinearGradient(0, 0, 0, 400);\r\n        const [start, end] = gradient.match(/#[0-9a-fA-F]{6}/g);\r\n        grad.addColorStop(0, start);\r\n        grad.addColorStop(1, end);\r\n        return grad;\r\n      }),\r\n      borderColor: [\r\n        '#4DA8DA',\r\n        '#4CAF50',\r\n        '#FFB300',\r\n        '#EC407A'\r\n      ],\r\n      borderWidth: 2,\r\n      borderRadius: 5,\r\n      hoverBackgroundColor: [\r\n        'rgba(77, 215, 247, 0.9)',\r\n        'rgba(129, 199, 132, 0.9)',\r\n        'rgba(255, 202, 40, 0.9)',\r\n        'rgba(244, 143, 177, 0.9)'\r\n      ],\r\n      hoverBorderColor: [\r\n        '#2E86C1',\r\n        '#388E3C',\r\n        '#FFA000',\r\n        '#D81B60'\r\n      ],\r\n      hoverBorderWidth: 3\r\n    }]\r\n  };\r\n\r\n  const completedByTypeOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Completed Goals by Type',\r\n        font: {\r\n          size: 18,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b'\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleFont: { family: 'Montserrat', size: 14 },\r\n        bodyFont: { family: 'Montserrat', size: 12 },\r\n        cornerRadius: 8\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Goals',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        grid: {\r\n          color: 'rgba(0, 0, 0, 0.1)'\r\n        },\r\n        ticks: {\r\n          font: {\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#333'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Goal Type',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        grid: {\r\n          display: false\r\n        },\r\n        ticks: {\r\n          font: {\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#333'\r\n        }\r\n      }\r\n    },\r\n    animation: {\r\n      duration: 1500,\r\n      easing: 'easeOutQuart'\r\n    }\r\n  };\r\n\r\n  // Success Rate Over Time (from Insights)\r\n  const completedByDate = {};\r\n  goals.forEach(goal => {\r\n    if (goal.completed) {\r\n      const date = new Date(goal.createdAt);\r\n      const dayKey = date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n      completedByDate[dayKey] = (completedByDate[dayKey] || 0) + 1;\r\n    }\r\n  });\r\n\r\n  const dates = Object.keys(completedByDate).sort((a, b) => new Date(a) - new Date(b));\r\n  const successData = dates.map(date => completedByDate[date] || 0);\r\n\r\n  const successRateData = {\r\n    labels: dates,\r\n    datasets: [{\r\n      label: 'Completed Goals Over Time',\r\n      data: successData,\r\n      borderColor: '#00796b',\r\n      backgroundColor: 'rgba(0, 121, 107, 0.2)',\r\n      fill: true,\r\n      tension: 0.4,\r\n      pointBackgroundColor: '#00796b',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: '#00796b'\r\n    }]\r\n  };\r\n\r\n  const successRateOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Success Rate Over Time',\r\n        font: {\r\n          size: 18,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b'\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Completed Goals',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Date',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Consistency by type\r\n  const consistencyData = {\r\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\r\n    datasets: [{\r\n      label: 'Consistency (Completed Goals)',\r\n      data: [\r\n        goals.filter(g => g.type === 'daily' && g.completed).length,\r\n        goals.filter(g => g.type === 'weekly' && g.completed).length,\r\n        goals.filter(g => g.type === 'monthly' && g.completed).length,\r\n        goals.filter(g => g.type === 'yearly' && g.completed).length\r\n      ],\r\n      backgroundColor: '#4dd0e1',\r\n      borderColor: '#00796b',\r\n      borderWidth: 2,\r\n      borderRadius: 5\r\n    }]\r\n  };\r\n\r\n  const consistencyOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Consistency by Goal Type',\r\n        font: {\r\n          size: 18,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b'\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Completed Goals',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Goal Type',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Longest streak\r\n  const longestStreak = Math.max(...goals.map(g => g.streak), 0);\r\n\r\n  // Most active days (by weekday)\r\n  const activeDays = {};\r\n  goals.forEach(goal => {\r\n    if (goal.completed) {\r\n      const date = new Date(goal.createdAt);\r\n      const weekday = date.toLocaleDateString('en-US', { weekday: 'long' });\r\n      activeDays[weekday] = (activeDays[weekday] || 0) + 1;\r\n    }\r\n  });\r\n\r\n  const activeDaysData = {\r\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n    datasets: [{\r\n      label: 'Completions by Day',\r\n      data: [\r\n        activeDays['Monday'] || 0,\r\n        activeDays['Tuesday'] || 0,\r\n        activeDays['Wednesday'] || 0,\r\n        activeDays['Thursday'] || 0,\r\n        activeDays['Friday'] || 0,\r\n        activeDays['Saturday'] || 0,\r\n        activeDays['Sunday'] || 0\r\n      ],\r\n      backgroundColor: '#ffca28',\r\n      borderColor: '#ffb300',\r\n      borderWidth: 2,\r\n      borderRadius: 5\r\n    }]\r\n  };\r\n\r\n  const activeDaysOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Most Active Days of the Week',\r\n        font: {\r\n          size: 18,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b'\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Completions',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Day of the Week',\r\n          font: {\r\n            size: 14,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"insights\">\r\n      <h2>Analytics</h2>\r\n      <div className=\"insights-card card\">\r\n        <h3>Success Rate</h3>\r\n        <p><strong>{successRate.toFixed(1)}%</strong></p>\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress-fill\" style={{ width: `${successRate}%` }}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"insights-card card\">\r\n        <h3>Completed Goals by Type</h3>\r\n        <Bar data={completedByTypeData} options={completedByTypeOptions} />\r\n      </div>\r\n      <div className=\"insights-card card\">\r\n        <h3>Success Rate Over Time</h3>\r\n        <Line data={successRateData} options={successRateOptions} />\r\n      </div>\r\n      <div className=\"insights-card card\">\r\n        <h3>Consistency by Goal Type</h3>\r\n        <Bar data={consistencyData} options={consistencyOptions} />\r\n      </div>\r\n      <div className=\"insights-card card\">\r\n        <h3>Most Active Days</h3>\r\n        <Bar data={activeDaysData} options={activeDaysOptions} />\r\n      </div>\r\n      <div className=\"insights-card card\">\r\n        <h3>Longest Streak</h3>\r\n        <p><strong>{longestStreak}</strong> days</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressInsights;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}