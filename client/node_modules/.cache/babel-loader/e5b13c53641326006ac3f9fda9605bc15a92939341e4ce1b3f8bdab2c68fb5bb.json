{"ast":null,"code":"import React from'react';import{Line,Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend);const ProgressInsights=_ref=>{let{goals,totalCompleted,totalGoals}=_ref;// Success Rate (from Statistics)\nconst successRate=totalGoals>0?totalCompleted/totalGoals*100:0;// Completed Goals by Type Bar Chart (from Statistics)\nconst completedByTypeData={labels:['Daily','Weekly','Monthly','Yearly'],datasets:[{label:'Completed Goals',data:[goals.filter(g=>g.type==='daily'&&g.completed).length,goals.filter(g=>g.type==='weekly'&&g.completed).length,goals.filter(g=>g.type==='monthly'&&g.completed).length,goals.filter(g=>g.type==='yearly'&&g.completed).length],backgroundColor:['linear-gradient(135deg, #77D7F7 0%, #4DA8DA 100%)','linear-gradient(135deg, #81C784 0%, #4CAF50 100%)','linear-gradient(135deg, #FFCA28 0%, #FFB300 100%)','linear-gradient(135deg, #F48FB1 0%, #EC407A 100%)'].map(gradient=>{const ctx=document.createElement('canvas').getContext('2d');const grad=ctx.createLinearGradient(0,0,0,400);const[start,end]=gradient.match(/#[0-9a-fA-F]{6}/g);grad.addColorStop(0,start);grad.addColorStop(1,end);return grad;}),borderColor:['#4DA8DA','#4CAF50','#FFB300','#EC407A'],borderWidth:2,borderRadius:5,hoverBackgroundColor:['rgba(77, 215, 247, 0.9)','rgba(129, 199, 132, 0.9)','rgba(255, 202, 40, 0.9)','rgba(244, 143, 177, 0.9)'],hoverBorderColor:['#2E86C1','#388E3C','#FFA000','#D81B60'],hoverBorderWidth:3}]};const completedByTypeOptions={responsive:true,plugins:{legend:{position:'top',labels:{font:{size:12,family:'Montserrat',weight:'500'},color:'#00796b'}},title:{display:true,text:'Completed Goals by Type',font:{size:16,family:'Montserrat',weight:'600'},color:'#00796b',padding:{bottom:20}},tooltip:{backgroundColor:'rgba(0, 0, 0, 0.8)',titleFont:{family:'Montserrat',size:12},bodyFont:{family:'Montserrat',size:10},cornerRadius:8}},scales:{y:{beginAtZero:true,title:{display:true,text:'Number of Goals',font:{size:12,family:'Montserrat'},color:'#00796b'},grid:{color:'rgba(0, 0, 0, 0.1)'},ticks:{font:{size:10,family:'Montserrat'},color:'#333'}},x:{title:{display:true,text:'Goal Type',font:{size:12,family:'Montserrat'},color:'#00796b'},grid:{display:false},ticks:{font:{size:10,family:'Montserrat'},color:'#333'}}},animation:{duration:1500,easing:'easeOutQuart'},maintainAspectRatio:false};// Success Rate Over Time\nconst completedByDate={};goals.forEach(goal=>{if(goal.completed){const date=new Date(goal.createdAt);const dayKey=date.toLocaleDateString('en-US',{month:'short',day:'numeric'});completedByDate[dayKey]=(completedByDate[dayKey]||0)+1;}});const dates=Object.keys(completedByDate).sort((a,b)=>new Date(a)-new Date(b));const successData=dates.map(date=>completedByDate[date]||0);const successRateData={labels:dates,datasets:[{label:'Completed Goals Over Time',data:successData,borderColor:'#00796b',backgroundColor:'rgba(0, 121, 107, 0.2)',fill:true,tension:0.4,pointBackgroundColor:'#00796b',pointBorderColor:'#fff',pointHoverBackgroundColor:'#fff',pointHoverBorderColor:'#00796b'}]};const successRateOptions={responsive:true,plugins:{legend:{position:'top',labels:{font:{size:12,family:'Montserrat',weight:'500'},color:'#00796b'}},title:{display:true,text:'Success Rate Over Time',font:{size:16,family:'Montserrat',weight:'600'},color:'#00796b',padding:{bottom:20}}},scales:{y:{beginAtZero:true,title:{display:true,text:'Completed Goals',font:{size:12,family:'Montserrat'},color:'#00796b'},ticks:{font:{size:10,family:'Montserrat'}}},x:{title:{display:true,text:'Date',font:{size:12,family:'Montserrat'},color:'#00796b'},ticks:{font:{size:10,family:'Montserrat'}}}},maintainAspectRatio:false};// Most active days (by weekday)\nconst activeDays={};goals.forEach(goal=>{if(goal.completed){const date=new Date(goal.createdAt);const weekday=date.toLocaleDateString('en-US',{weekday:'long'});activeDays[weekday]=(activeDays[weekday]||0)+1;}});const activeDaysData={labels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],datasets:[{label:'Completions by Day',data:[activeDays['Monday']||0,activeDays['Tuesday']||0,activeDays['Wednesday']||0,activeDays['Thursday']||0,activeDays['Friday']||0,activeDays['Saturday']||0,activeDays['Sunday']||0],backgroundColor:'#ffca28',borderColor:'#ffb300',borderWidth:2,borderRadius:5}]};const activeDaysOptions={responsive:true,plugins:{legend:{position:'top',labels:{font:{size:12,family:'Montserrat',weight:'500'},color:'#00796b'}},title:{display:true,text:'Most Active Days of the Week',font:{size:16,family:'Montserrat',weight:'600'},color:'#00796b',padding:{bottom:20}}},scales:{y:{beginAtZero:true,title:{display:true,text:'Completions',font:{size:12,family:'Montserrat'},color:'#00796b'},ticks:{font:{size:10,family:'Montserrat'}}},x:{title:{display:true,text:'Day of the Week',font:{size:12,family:'Montserrat'},color:'#00796b'},ticks:{font:{size:10,family:'Montserrat'}}}},maintainAspectRatio:false};// Longest streak\nconst longestStreak=Math.max(...goals.map(g=>g.streak),0);return/*#__PURE__*/_jsxs(\"div\",{className:\"insights\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Analytics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"insights-card card success-rate\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-line\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Success Rate\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[successRate.toFixed(1),\"%\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${successRate}%`}})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-down\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"insights-card card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chart-bar\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Completed Goals by Type\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content chart-container\",children:/*#__PURE__*/_jsx(Bar,{data:completedByTypeData,options:completedByTypeOptions,height:600})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-down\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"insights-card card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-line-chart\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Success Rate Over Time\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content chart-container\",children:/*#__PURE__*/_jsx(Line,{data:successRateData,options:successRateOptions,height:600})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-down\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"insights-card card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-calendar-day\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Most Active Days\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content chart-container\",children:/*#__PURE__*/_jsx(Bar,{data:activeDaysData,options:activeDaysOptions,height:600})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-down\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"insights-card card longest-streak\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-star\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Longest Streak\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:longestStreak}),\" days\"]})})]})]});};export default ProgressInsights;","map":{"version":3,"names":["React","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ProgressInsights","_ref","goals","totalCompleted","totalGoals","successRate","completedByTypeData","labels","datasets","label","data","filter","g","type","completed","length","backgroundColor","map","gradient","ctx","document","createElement","getContext","grad","createLinearGradient","start","end","match","addColorStop","borderColor","borderWidth","borderRadius","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","completedByTypeOptions","responsive","plugins","legend","position","font","size","family","weight","color","title","display","text","padding","bottom","tooltip","titleFont","bodyFont","cornerRadius","scales","y","beginAtZero","grid","ticks","x","animation","duration","easing","maintainAspectRatio","completedByDate","forEach","goal","date","Date","createdAt","dayKey","toLocaleDateString","month","day","dates","Object","keys","sort","a","b","successData","successRateData","fill","tension","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","successRateOptions","activeDays","weekday","activeDaysData","activeDaysOptions","longestStreak","Math","max","streak","className","children","toFixed","style","width","options","height"],"sources":["C:/Users/aryan/Documents/HabitQuest/client/src/components/ProgressInsights.js"],"sourcesContent":["import React from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ProgressInsights = ({ goals, totalCompleted, totalGoals }) => {\r\n  // Success Rate (from Statistics)\r\n  const successRate = totalGoals > 0 ? (totalCompleted / totalGoals) * 100 : 0;\r\n\r\n  // Completed Goals by Type Bar Chart (from Statistics)\r\n  const completedByTypeData = {\r\n    labels: ['Daily', 'Weekly', 'Monthly', 'Yearly'],\r\n    datasets: [{\r\n      label: 'Completed Goals',\r\n      data: [\r\n        goals.filter(g => g.type === 'daily' && g.completed).length,\r\n        goals.filter(g => g.type === 'weekly' && g.completed).length,\r\n        goals.filter(g => g.type === 'monthly' && g.completed).length,\r\n        goals.filter(g => g.type === 'yearly' && g.completed).length\r\n      ],\r\n      backgroundColor: [\r\n        'linear-gradient(135deg, #77D7F7 0%, #4DA8DA 100%)',\r\n        'linear-gradient(135deg, #81C784 0%, #4CAF50 100%)',\r\n        'linear-gradient(135deg, #FFCA28 0%, #FFB300 100%)',\r\n        'linear-gradient(135deg, #F48FB1 0%, #EC407A 100%)'\r\n      ].map(gradient => {\r\n        const ctx = document.createElement('canvas').getContext('2d');\r\n        const grad = ctx.createLinearGradient(0, 0, 0, 400);\r\n        const [start, end] = gradient.match(/#[0-9a-fA-F]{6}/g);\r\n        grad.addColorStop(0, start);\r\n        grad.addColorStop(1, end);\r\n        return grad;\r\n      }),\r\n      borderColor: [\r\n        '#4DA8DA',\r\n        '#4CAF50',\r\n        '#FFB300',\r\n        '#EC407A'\r\n      ],\r\n      borderWidth: 2,\r\n      borderRadius: 5,\r\n      hoverBackgroundColor: [\r\n        'rgba(77, 215, 247, 0.9)',\r\n        'rgba(129, 199, 132, 0.9)',\r\n        'rgba(255, 202, 40, 0.9)',\r\n        'rgba(244, 143, 177, 0.9)'\r\n      ],\r\n      hoverBorderColor: [\r\n        '#2E86C1',\r\n        '#388E3C',\r\n        '#FFA000',\r\n        '#D81B60'\r\n      ],\r\n      hoverBorderWidth: 3\r\n    }]\r\n  };\r\n\r\n  const completedByTypeOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Completed Goals by Type',\r\n        font: {\r\n          size: 16,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b',\r\n        padding: {\r\n          bottom: 20\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        titleFont: { family: 'Montserrat', size: 12 },\r\n        bodyFont: { family: 'Montserrat', size: 10 },\r\n        cornerRadius: 8\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Goals',\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        grid: {\r\n          color: 'rgba(0, 0, 0, 0.1)'\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 10,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#333'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Goal Type',\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        grid: {\r\n          display: false\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 10,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#333'\r\n        }\r\n      }\r\n    },\r\n    animation: {\r\n      duration: 1500,\r\n      easing: 'easeOutQuart'\r\n    },\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  // Success Rate Over Time\r\n  const completedByDate = {};\r\n  goals.forEach(goal => {\r\n    if (goal.completed) {\r\n      const date = new Date(goal.createdAt);\r\n      const dayKey = date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n      completedByDate[dayKey] = (completedByDate[dayKey] || 0) + 1;\r\n    }\r\n  });\r\n\r\n  const dates = Object.keys(completedByDate).sort((a, b) => new Date(a) - new Date(b));\r\n  const successData = dates.map(date => completedByDate[date] || 0);\r\n\r\n  const successRateData = {\r\n    labels: dates,\r\n    datasets: [{\r\n      label: 'Completed Goals Over Time',\r\n      data: successData,\r\n      borderColor: '#00796b',\r\n      backgroundColor: 'rgba(0, 121, 107, 0.2)',\r\n      fill: true,\r\n      tension: 0.4,\r\n      pointBackgroundColor: '#00796b',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: '#00796b'\r\n    }]\r\n  };\r\n\r\n  const successRateOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Success Rate Over Time',\r\n        font: {\r\n          size: 16,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b',\r\n        padding: {\r\n          bottom: 20\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Completed Goals',\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 10,\r\n            family: 'Montserrat'\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Date',\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 10,\r\n            family: 'Montserrat'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  // Most active days (by weekday)\r\n  const activeDays = {};\r\n  goals.forEach(goal => {\r\n    if (goal.completed) {\r\n      const date = new Date(goal.createdAt);\r\n      const weekday = date.toLocaleDateString('en-US', { weekday: 'long' });\r\n      activeDays[weekday] = (activeDays[weekday] || 0) + 1;\r\n    }\r\n  });\r\n\r\n  const activeDaysData = {\r\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n    datasets: [{\r\n      label: 'Completions by Day',\r\n      data: [\r\n        activeDays['Monday'] || 0,\r\n        activeDays['Tuesday'] || 0,\r\n        activeDays['Wednesday'] || 0,\r\n        activeDays['Thursday'] || 0,\r\n        activeDays['Friday'] || 0,\r\n        activeDays['Saturday'] || 0,\r\n        activeDays['Sunday'] || 0\r\n      ],\r\n      backgroundColor: '#ffca28',\r\n      borderColor: '#ffb300',\r\n      borderWidth: 2,\r\n      borderRadius: 5\r\n    }]\r\n  };\r\n\r\n  const activeDaysOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat',\r\n            weight: '500'\r\n          },\r\n          color: '#00796b'\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Most Active Days of the Week',\r\n        font: {\r\n          size: 16,\r\n          family: 'Montserrat',\r\n          weight: '600'\r\n        },\r\n        color: '#00796b',\r\n        padding: {\r\n          bottom: 20\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Completions',\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 10,\r\n            family: 'Montserrat'\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Day of the Week',\r\n          font: {\r\n            size: 12,\r\n            family: 'Montserrat'\r\n          },\r\n          color: '#00796b'\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 10,\r\n            family: 'Montserrat'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  // Longest streak\r\n  const longestStreak = Math.max(...goals.map(g => g.streak), 0);\r\n\r\n  return (\r\n    <div className=\"insights\">\r\n      <h2>Analytics</h2>\r\n      <div className=\"insights-card card success-rate\">\r\n        <div className=\"card-header\">\r\n          <i className=\"fas fa-chart-line\"></i>\r\n          <h3>Success Rate</h3>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <p><strong>{successRate.toFixed(1)}%</strong></p>\r\n          <div className=\"progress-bar\">\r\n            <div className=\"progress-fill\" style={{ width: `${successRate}%` }}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"divider\"><i className=\"fas fa-chevron-down\"></i></div>\r\n      <div className=\"insights-card card\">\r\n        <div className=\"card-header\">\r\n          <i className=\"fas fa-chart-bar\"></i>\r\n          <h3>Completed Goals by Type</h3>\r\n        </div>\r\n        <div className=\"card-content chart-container\">\r\n          <Bar data={completedByTypeData} options={completedByTypeOptions} height={600} />\r\n        </div>\r\n      </div>\r\n      <div className=\"divider\"><i className=\"fas fa-chevron-down\"></i></div>\r\n      <div className=\"insights-card card\">\r\n        <div className=\"card-header\">\r\n          <i className=\"fas fa-line-chart\"></i>\r\n          <h3>Success Rate Over Time</h3>\r\n        </div>\r\n        <div className=\"card-content chart-container\">\r\n          <Line data={successRateData} options={successRateOptions} height={600} />\r\n        </div>\r\n      </div>\r\n      <div className=\"divider\"><i className=\"fas fa-chevron-down\"></i></div>\r\n      <div className=\"insights-card card\">\r\n        <div className=\"card-header\">\r\n          <i className=\"fas fa-calendar-day\"></i>\r\n          <h3>Most Active Days</h3>\r\n        </div>\r\n        <div className=\"card-content chart-container\">\r\n          <Bar data={activeDaysData} options={activeDaysOptions} height={600} />\r\n        </div>\r\n      </div>\r\n      <div className=\"divider\"><i className=\"fas fa-chevron-down\"></i></div>\r\n      <div className=\"insights-card card longest-streak\">\r\n        <div className=\"card-header\">\r\n          <i className=\"fas fa-star\"></i>\r\n          <h3>Longest Streak</h3>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <p><strong>{longestStreak}</strong> days</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressInsights;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}